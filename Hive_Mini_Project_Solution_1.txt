This is a real time dataset of the ineuron technical consultant team. You have to perform hive analysis on this given dataset. 

1. Create a schema based on the given dataset
CREATE TABLE AGNT_PERFORMANCE
(SL_NO INT,
A_DATE DATE,
A_NAME STRING,
TOTAL_CHATS INT,
AVG_RESPONSE_TIME STRING,
AVG_RESOLUTION_TIME STRING,
AVG_RATING DOUBLE,
TOTAL_FEED INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
tblproperties ("skip.header.line.count"="1");

CREATE TABLE AGNT_LOG_REPORT
(SL_NO INT,
AGENT STRING,
A_DATE DATE,
LOG_TIME STRING,
LOG_OUT STRING,
DURATION STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
tblproperties ("skip.header.line.count"="1");

2. Dump the data inside the hdfs in the given schema location.
load data inpath '/user/Mini/AgentPerformance.csv' into table AGNT_PERFORMANCE;
load data inpath '/user/Mini/AgentLogingReport.csv' into table AGNT_LOG_REPORT;

3. List of all agents' names. 
select DISTINCT(A_NAME) from AGNT_PERFORMANCE;

4. Find out agent average rating.
select AVG(AVG_RATING),A_NAME from AGNT_PERFORMANCE GROUP BY A_NAME;

5. Total working days for each agents 
select COUNT(A_DATE),AGENT from AGNT_LOG_REPORT GROUP BY AGENT;

6. Total query that each agent have taken 
select SUM(TOTAL_CHATS),A_NAME from AGNT_PERFORMANCE GROUP BY A_NAME;

7. Total Feedback that each agent have received 
select SUM(TOTAL_FEED),A_NAME from AGNT_PERFORMANCE GROUP BY A_NAME;

8. Agent name who have average rating between 3.5 to 4 
select AVG_RATING,A_NAME from AGNT_PERFORMANCE WHERE AVG_RATING BETWEEN 3.5 AND 4;

9. Agent name who have rating less than 3.5
select AVG_RATING,A_NAME from AGNT_PERFORMANCE WHERE AVG_RATING<3.5;

10. Agent name who have rating more than 4.5 
select AVG_RATING,A_NAME from AGNT_PERFORMANCE WHERE AVG_RATING>4.5;

11. How many feedback agents have received more than 4.5 average
select COUNT(TOTAL_FEED),A_NAME from AGNT_PERFORMANCE WHERE AVG_RATING>4.5 GROUP BY A_NAME;

12. average weekly response time for each agent 
select AVG(AVG_RESPONSE_TIME),A_NAME from AGNT_PERFORMANCE GROUP BY A_NAME,WEEKOFYEAR(A_DATE);

13. average weekly resolution time for each agents 
select AVG(AVG_RESOLUTION_TIME),A_NAME from AGNT_PERFORMANCE GROUP BY A_NAME,WEEKOFYEAR(A_DATE);

14. Find the number of chat on which they have received a feedback 
select SUM(TOTAL_CHATS),A_NAME from AGNT_PERFORMANCE WHERE TOTAL_FEED <>0 GROUP BY A_NAME ;

15. Total contribution hour for each and every agents weekly basis 
select SUM(DURATION),AGENT from AGNT_LOG_REPORT GROUP BY AGENT,WEEKOFYEAR(A_DATE);

16. Perform inner join, left join and right join based on the agent column and after joining the table export that data into your local system.
insert overwrite directory '/Mini/Agent_info.csv' row format delimited fields terminated by ',' 
select * from AGNT_LOG_REPORT T0 INNER JOIN AGNT_PERFORMANCE T1 ON T0.AGENT=T1.A_NAME;

17. Perform partitioning on top of the agent column and then on top of that perform bucketing for each partitioning.
Create Table AgentLoggingReport(
SL NO Int,
Agent String,
Date Date,
Login Time Timestamp,
Logout Time Timestamp,
Duration Timestamp
)
Partitioned by (Agent)
clustered by Agent Into 10 buckets
row format delimited 
fields terminated by ',';
